version: '3'

services:
  nginx:
    build: ./docker/nginx
    ports:
      - "443:443"
    restart: "on-failure"
    #volumes:
    #  - .:/var/www

  python:
    build:
      context: ./docker/python/backend
    command: "uvicorn main:app --reload --proxy-headers --host 0.0.0.0 --root-path /api/"
    environment:
      - TIMEOUT=600
    env_file:
      - ./app.env
    volumes:
      - ./backend:/app
      - ./data/backend:/var/lib/maskanyone/data
    depends_on:
      - postgres

  python-worker-basic_masking:
    build:
      context: ./docker/python/workers/basic_masking
    command: "python basic_masking_worker.py "
    env_file:
      - ./app.env
    volumes:
      - ./workers:/app
    environment:
      WORKER_TYPE: "basic_masking"
    # mem_limit: 4096m
    # cpus: 4
    # scale: 2
    depends_on:
      - python
    #deploy:
    #  resources:
    #    reservations:
    #      devices:
    #        - driver: nvidia
    #          count: 1
    #          capabilities: [gpu]

  python-worker-roop:
    build:
      context: ./docker/python/workers/roop
    command: "python docker_worker.py "
    env_file:
      - ./app.env
    volumes:
      - ./workers:/app
    environment:
      WORKER_TYPE: "roop"
    depends_on:
      - python

#  python-worker-blender:
#    build:
#      context: ./docker/python/workers/blender
#    command: "python /app/docker_worker.py"
#    env_file:
#      - ./app.env
#    volumes:
#      - ./workers:/app
#    environment:
#      WORKER_TYPE: "blender"
#    depends_on:
#      - python

  postgres:
    build:
      context: ./docker/postgres
    env_file:
      - ./app.env
    volumes:
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - ./data/postgres:/var/lib/postgresql/data

  pgadmin:
    build:
      context: ./docker/pgadmin
    ports:
      - "5433:443"
    environment:
      PGADMIN_ENABLE_TLS: "True"
      PGADMIN_DEFAULT_EMAIL: "dev@dev.dev"
      PGADMIN_DEFAULT_PASSWORD: "dev"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    depends_on:
      - postgres

  yarn:
    build:
      context: ./docker/yarn
    command: "yarn start"
    volumes:
      - ./frontend:/app

  keycloak:
    build:
      context: ./docker/keycloak
    environment:
      KEYCLOAK_ADMIN: dev
      KEYCLOAK_ADMIN_PASSWORD: dev
    command: "start-dev"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
