
services:
  nginx:
    build: ./docker/nginx
    ports:
      - "443:443"
    restart: "on-failure"

  python:
    build:
      context: ./docker/backend
    command: "uvicorn main:app --reload --proxy-headers --host 0.0.0.0 --root-path /api/"
    environment:
      - TIMEOUT=600
    env_file:
      - ./app.env
    volumes:
      - ./backend:/app
      - ./data/backend:/var/lib/maskanyone/data
    depends_on:
      - postgres

  postgres:
    build:
      context: ./docker/postgres
    env_file:
      - ./app.env
    volumes:
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      - ./data/postgres:/var/lib/postgresql/data

  pgadmin:
    build:
      context: ./docker/pgadmin
    ports:
      - "5433:443"
    environment:
      PGADMIN_ENABLE_TLS: "True"
      PGADMIN_DEFAULT_EMAIL: "dev@dev.dev"
      PGADMIN_DEFAULT_PASSWORD: "dev"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    depends_on:
      - postgres

  yarn:
    build:
      context: ./docker/yarn
    command: "yarn start"
    volumes:
      - ./frontend:/app

  keycloak:
    build:
      context: ./docker/keycloak
    environment:
      KEYCLOAK_ADMIN: dev
      KEYCLOAK_ADMIN_PASSWORD: dev
    command: "start-dev"
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  worker:
    build:
      context: ./docker/worker
    command: "python worker.py"
    env_file:
      - ./app.env
    volumes:
      - ./worker:/app
    depends_on:
      - python
    restart: on-failure
    deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ["{MASKANYONE_GPU_ID:-0}"]
                capabilities: [ gpu ]

  sam2:
    build:
      context: ./docker/sam2
    command: "uvicorn main:app --reload --proxy-headers --host 0.0.0.0 --root-path /api/"
    env_file:
      - ./app.env
    volumes:
      - ./sam2:/app
    restart: on-failure
    deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ["{MASKANYONE_GPU_ID:-0}"]
                capabilities: [ gpu ]

  openpose:
    build:
      context: ./docker/openpose
    command: "uvicorn main:app --reload --proxy-headers --host 0.0.0.0 --root-path /api/"
    env_file:
      - ./app.env
    volumes:
      - ./openpose:/app
      - ./docker/openpose/models:/models
    restart: on-failure
    deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ["{MASKANYONE_GPU_ID:-0}"]
                capabilities: [ gpu ]
